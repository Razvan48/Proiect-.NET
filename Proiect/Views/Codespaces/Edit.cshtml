@model Proiect.Models.Codespace

@{
    ViewData["Title"] = "Edit Codespace";
}

<div class="d-flex justify-content-around bg-light rounded-1">
    <a class="btn btn-primary" href="/Discussions/Show/@Model.DiscussionId">Back to the Discussion</a>
</div>

<style>
    .code-editor-container {
        position: relative;
    }

    .code-editor {
        font-family: 'Courier New', monospace;
        width: 100%;
        height: 200px;
        padding: 10px;
        counter-reset: line-number;
        white-space: pre-line position: relative;
        resize: vertical;
        border: none;
    }

        .code-editor:before {
            content: counter(line-number); /* Display the line number */
            counter-increment: line-number; /* Increment the counter for each line */
            display: inline-block;
            width: 30px; /* Adjust the width based on your needs */
            text-align: right;
            padding-right: 10px;
            margin-right: 10px;
            color: #aaa; /* Adjust the color based on your needs */
            position: absolute;
            height: 100%;
            box-sizing: border-box;
        }

    .container {
        background-color: #fff;
        border-radius: 8px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        padding: 20px;
        margin-top: 20px;
    }
</style>

<h2>@ViewData["Title"]</h2>
<hr />

@using (Html.BeginForm("RunForm", "Codespaces", FormMethod.Post, new { id = "myForm" })) {
    @Html.HiddenFor(m => m.DiscussionId)
    @Html.HiddenFor(m => m.AnswerId);

    <div class="form-group">
        @Html.LabelFor(m => m.Content, "Code:")
        <div class="code-editor-container">
            @Html.TextAreaFor(m => m.Content, new { @class = "form-control code-editor" })
            @Html.ValidationMessageFor(m => m.Content, null, new { @class = "text-danger" })
        </div>
    </div>

    @Html.ValidationSummary(false, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(m => m.Language, "Select Language:")
        @Html.DropDownListFor(m => m.Language, new SelectList(new[]
                {
    new SelectListItem { Value = "csharp", Text = "C#" },
    new SelectListItem { Value = "cpp", Text = "C++" },
    new SelectListItem { Value = "python", Text = "Python" }
    }, "Value", "Text"), new { @class = "form-control", id = "language" })
    </div>

    <input type="hidden" name="selectedLanguage" id="selectedLanguage" value="" />
    <button type="submit" name="action" value="RunCC" class="btn btn-primary btn-success">Run Code</button>
    <button type="submit" name="action" value="AddAnswerCC" class="btn btn-primary">Make Changes</button>
}

@if (!string.IsNullOrEmpty(ViewBag.Output)) {
    <div class="container mt-5">
        <h3>Output:</h3>
        <div class="mt-4 text-center">
            @Html.Raw(ViewBag.Output)
        </div>
    </div>
}

<script>

</script>